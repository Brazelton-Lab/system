{"ALE": {"categories": ["statistics", "validation"], "commands": ["ALE"], "dependencies": ["make", "gcc"], "description": "A probabilistic framework for determining the likelihood of a genome or metagenome assembly using bayesian statistics. It allows for comparisons between multiple assemblies generated from the same set of reads", "installation method": "source", "previous versions": [], "version": ""}, "ARAGORN": {"categories": ["annotation"], "commands": ["aragorn"], "dependencies": ["gcc"], "description": "tRNA and tmRNA finder. ARAGORN is highly specialized at finding all tRNAs and tmRNAs in a DNA sequence.", "installation method": "source", "previous versions": [], "version": "1.2.36"}, "Archaeopteryx": {"categories": ["visualization"], "commands": ["aptx"], "dependencies": ["Java(>=1.6)", "forester libs"], "description": "Tool for the visualizition, analysis, and editing of potentially large and highly annotated phylogenetic trees", "installation method": "source", "previous versions": ["0.957(to 2015-01-15)"], "version": "0.9901"}, "BBMap": {"categories": ["alignment"], "commands": ["bbmap"], "dependencies": ["Java(>=6)"], "description": "Short read aligner for DNA and RNA-seq data", "installation method": "Source", "previous versions": [], "version": "34.41"}, "BCFtools": {"categories": ["formatting"], "commands": ["bcftools", "vcfutils.py", "plot-vcfstats"], "dependencies": ["htslib", "gcc"], "description": "Set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart (BCF)", "installation method": "source", "previous versions": ["0.1.19(2015-01-14)", "1.1(2016-28-01)"], "version": "1.3"}, "BEDTools": {"categories": ["analysis"], "commands": ["bedtools"], "dependencies": ["gcc", "zlib", "glibc"], "description": "(Browser Extensible Data tools) Set of tools for performing a wide-range of genomics analysis tasks using the BAM, BED, GFF, and VCF file formats", "installation method": "source", "previous versions": ["2.15.0(20160329)"], "version": "2.25.0"}, "BLAST+": {"categories": ["alignment"], "commands": ["blastn", "blastp", "blastx", "tblastx", "datatool", "blastdbcmd", "blastdbcp", "blastdbcheck", "blastdb_aliastool", "blast_formatter", "deltablast", "dustmasker", "convert2blastmask", "gene_info_reader", "makembindex", "makeblastdb", "psiblast", "rpsblast", "segmasker", "seedtop", "rpstblastn", "seqdb_demo", "seqdb_perf", "update_blastdb.pl", "windowmasker"], "dependencies": ["unix"], "description": "(Basic Local Alignment Search Tool) For sequence similarity searching", "installation method": "source", "previous versions": ["1.2.29(2015-01-16)", "2.2.30(2016-01-26)"], "version": "2.3.0"}, "BWA": {"categories": ["alignment"], "commands": ["bwa"], "dependencies": ["unix"], "description": "(Burrows-Wheeler Aligner) For mapping low-divergent sequences against a large reference genome", "installation method": "source", "previous versions": ["0.7.10(to 2015-01-13)"], "version": "0.7.12"}, "Barrnap": {"categories": ["annotation"], "commands": ["barrnap"], "dependencies": ["jvm"], "description": "rRNA finder. Barrnap is highly specialized at finding bacterial 5S, 23S, 16S rRNA genes; archaea 5S, 5.8S, 23S, 16S rRNA genes; and eukaryotic 5S, 5.8S, 28S, 18S rRNA genes.", "installation method": "source", "previous versions": ["0.4.2(2016-01-31)"], "version": "0.7.0"}, "Biopython": {"categories": ["library"], "commands": [], "dependencies": ["NumPy", "ReportLab", "matplotlib", "networkx", "rdflib", "psycopg2", "MySQL", "MySQLdb", "gcc"], "description": "Python module containing many useful functions for common bioinformatics tasks", "installation method": "source", "previous versions": [], "version": "1.65"}, "BowTie2": {"categories": ["alignment"], "commands": ["bowtie2"], "dependencies": ["gcc"], "description": "Tool for aligning sequence reads to long reference sequences. It is optimized for the read lengths and error modes yielded by recent sequencing technologies", "installation method": "source", "previous versions": ["2.2.0(2015-01-15)", "2.2.4(2016-01-26)"], "version": "2.2.6"}, "CD-Hit": {"categories": ["alignment"], "commands": ["cd-hit", "cd-hit-2d", "cd-hit-454", "cd-hit-div", "cd-hit-dup", "cd-hit-est", "cd-hit-est-2d", "cd-hit-lap"], "dependencies": ["blast", "gcc"], "description": "CD-Hit is a large software suite. It is used for aligning and clustering proteins, creating OTUs from 16S rRNA, filtering duplicated reads from sequencers, and merging assembled contigs.", "installation method": "source", "previous versions": [], "version": "4.6.1"}, "CheckM": {"categories": ["validation"], "commands": ["checkm"], "dependencies": ["pip"], "description": "Toolset for assessing the quality of putative genomes. Makes use of metrics like ubiquitous single copy gene number, GC content, and coding density", "installation method": "pip", "previous versions": ["1.0.4(20160328)"], "version": "1.0.5"}, "Clustal-Omega": {"categories": ["alignment"], "commands": ["clustalo"], "dependencies": ["argtable2", "gcc"], "description": "A general purpose multiple sequence alignment program. Performs multiple sequence alignment for protein and DNA/RNA", "installation method": "source", "previous versions": [], "version": "1.2.1"}, "Cutadapt": {"categories": ["qc"], "commands": ["cutadapt"], "dependencies": ["Python(>=2.7)", "xopen"], "description": "Finds and removes adapter sequences, primers, poly-A tails and other types of unwanted sequence from high-throughput sequencing reads", "installation method": "pip", "previous versions": ["1.9.1(20161105)", "1.11(20170117)"], "version": "1.12"}, "DADA2": {"categories": ["qc", "statistics"], "commands": ["R"], "dependencies": ["R(>=3.2.0)", "Rcpp(>=0.11.2)", "Biostrings(>=2.32.1)", "ggplot2(>=1.0)", "reshape2(>=1.4.1)", "ShortRead(>=1.24.0)", "data.table(>=1.9.4)"], "description": "For inferring sample composition from aplicon sequencing reads. Can resolve differences of as little as a single nucleotide", "installation method": "source", "previous versions": ["0.99.7(2016-05-26)"], "version": "1.1.1"}, "DBC": {"commands": ["dbOTUcaller.py"], "dependencies": ["Python(>=2.7)", "R(2.15.3)", "rpy2(2.3.6)", "numpy(1.5.1)", "biopython"], "description": "(Distribution-Based Clustering) Clusters 16s tag-sequences using distribution information to inform OTU generation", "installation method": "source", "previous versions": ["1.0(to 2015-01-07)"], "version": "2.0"}, "DESeq2": {"categories": ["library", "statistics", "analysis"], "commands": [], "dependencies": ["R", "IRanges", "GenomicRanges", "S4Vectors(>=0.7.5)", "SummarizedExperiment(>=1.1.6)"], "description": "R package for estimating variance-mean dependence in count data from high-throughput sequencing assays and test for differential expression based on a model using the negative binomial distribution", "installation method": "Bioconductor", "previous versions": [], "version": "1.10.1"}, "EMIRGE": {"commands": ["emirge.py", "emirge_amplicon.py"], "dependencies": ["Python(>=2.6)", "BioPython", "Cython", "pysam", "scipy", "usearch(6.0.23+)", "samtools(0.1.18)", "bowtie(>=0.12.7)"], "description": "(Expectation-Maximization Iterative Reconstruction of Genes from the Environment) Reconstructs full-length ribosomal genes from short read sequencing data", "installation method": "setup.py", "previous versions": [], "version": "0.5.0"}, "ESOM": {"categories": ["binning"], "commands": ["esomana"], "dependencies": ["JAVA(>=1.4.2)"], "description": "(Emergent Self-Organizing Maps) Suite of programs to perform data mining (clustering, visualization, classification) tasks", "installation method": "source", "previous versions": [], "version": "1.1"}, "FastQC": {"categories": ["statistics"], "commands": ["fastqc"], "dependencies": ["jvm"], "description": "Generates comprehensive quality control reports on sequence data in FastQ, SAM, or BAM formats. It can be run in an interactive graphical mode or command-line batch mode", "installation method": "source", "previous versions": [], "version": "0.11.4"}, "FastTree": {"commands": ["FastTree", "FastTreeMP"], "dependencies": ["unix"], "description": "Infers approximately-maximum-liklihood phylogenetic trees from alignments of nucleotide or protein sequences", "installation method": "binary", "previous versions": [], "version": "2.1.3"}, "FragGeneScan": {"categories": ["annotation"], "commands": ["FragGeneScan"], "dependencies": ["gcc", "perl5"], "description": "Application for finding (fragmented) genes in short reads. It can also be applied to predict prokaryotic genes in incomplete assemblies or complete genome", "installation method": "source", "previous versions": [], "version": "1.30"}, "FreeBayes": {"categories": ["annotation"], "commands": ["freebayes", "bamleftalign"], "dependencies": ["gcc"], "description": "A Bayesian genetic variant detector. Designed to find small polymorphisms, specifically single-nucleotide polymorphisms, indels (insertions and deletions), multi-nucleotide polymorphisms, and complex events (composite insertion and deletion events)", "installation method": "git", "previous versions": ["0.9.13(to 2015-01-14)"], "version": "0.9.20"}, "GraPhlAn": {"categories": ["visualization"], "commands": ["graphlan.py", "graphlan_annotate.py"], "dependencies": ["python(2.7+)", "biopython(1.6+)", "matplotlib(1.1+)"], "description": "For producing high-quality circular representations of phylogenetic or taxonomic trees", "installation method": "mercurial", "previous versions": ["0.9.7"], "version": "0.9.7"}, "HMMER3": {"categories": ["alignment"], "commands": ["hmmalign", "hmmbuild", "phmmer", "jackhmmer", "hmmsearch", "hmmscan", "hmmpgmd", "nhmmer", "nhmmscan", "alimask", "hmmconvert", "hmmemit", "hmmfetch", "hmmpress", "hmmstat"], "dependencies": [], "description": "(Hidden Markov ModlER) A suite of tools for creating, using, and analyzing Hidden Markov Models in a biological context. HMMER3 can be used with both proteins and nucleotides to model sequences, align sequences, and determine the probability of alignment.", "installation method": "source", "previous versions": [], "version": "3.1b2"}, "HTSeq": {"categories": ["library"], "commands": ["htseq-qa", "htseq-count"], "dependencies": ["python(>=2.5)", "matplotlib", "numpy"], "description": "Python package providing a framework for processing high-throughput sequencing data", "installation method": "pip", "previous versions": [], "version": "0.6.1"}, "HumanN2": {"categories": ["annotation"], "commands": ["humann2"], "dependencies": ["Bowtie2(>=2.1)", "Diamond(>=0.7.3)", "MinPath", "Python(>=2.7)", "MetaPhlAn2"], "description": "A pipeline for profiling the metabolic pathways in a microbial community from metagenomic or metatranscriptomic sequencing data", "installation method": "pip", "previous versions": ["0.1.9(2016-28-01)"], "version": "0.6.0"}, "IDBA": {"categories": ["assembly"], "commands": ["idab", "idba_ud", "idba_tran", "idba_hypbrid"], "dependencies": ["gcc"], "description": "(Iterative De-Bruijn Graph Assembler) Assemblers for short sequencing reads. IDBA-UD  is for de novo assembly of reads with highly uneven sequencing depth, such as in metagenomics and single-cell genomics data. IDBA-Tran is for assembly of trasncritpome data. IDBA-Hybrid is for assembly of genomics data using a reference genome.", "installation method": "source", "previous versions": [], "version": "1.0.9"}, "Infernal": {"categories": ["alignment"], "commands": ["cmalign", "cmbuild", "cmcalibrate", "cmconvert", "cmemit", "cmfetch", "cmpress", "cmscan", "cmsearch", "cmstat"], "dependencies": ["gcc", "make"], "description": "(INFERence of RNA ALignment) Suite of programs for structural RNA alignment and database homology search", "installation method": "source", "previous versions": ["1.1(to 2015-01-16)"], "version": "1.1.1"}, "Khmer": {"categories": ["qc", "assembly", "statistics"], "commands": ["load-into-counting.py", "abundance-dist.py", "abundance-dist-single.py", "filter-abund.py", "filter-abund-single.py", "count-median.py", "count-overlap.py", "do-partition.py", "load-graph.py", "partition-graph.py", "merge-partition.py", "annotate-partitions.py", "extract-partitions.py", "make-initial-stoptags.py", "find-knots.py", "filter-stoptags.py", "normalize-by-median.py", "extract-long-sequences.py", "extract-paired-reads.py", "fastq-to-fasta.py", "interleave-reads.py", "sample-reads-randomly.py", "split-paired-reads.py"], "dependencies": ["Python(>=2.7)"], "description": "Library and toolkit for doing k-mer-based dataset analysis and transformations. The type of transformations include inexact transformations- for abundance filtering and error trimming - and exact transformations - for graph-size filtering, to remove disconnected reads; and partitioning, to  split reads into disjointed sets", "installation method": "python pip", "previous versions": ["1.0.1(2016-01-26)"], "version": "2.0"}, "KronaTools": {"categories": ["visualization"], "commands": ["ktImportEC.pl", "ktextractTaxonomy.pl", "ktImportDiskUsage.pl", "ktImportFCP.pl", "ktformatEC.pl", "ktGetLibPath.pl", "ktindexGIs.pl", "ktImportText.pl", "ktImportPhymmBL.pl", "ktImportGalaxy.pl", "ktImportMGRAST.pl", "ktImportBLAST.pl", "ktGetContigMagnitudes.pl", "ktClassifyBLAST.pl", "ktImportXML.pl", "ktImportRDP.pl", "ktGetTaxIDFromGI.pl", "ktImportRDPComparison.pl", "ktImportTaxonomy.pl"], "dependencies": ["unix"], "description": "Tools for creating krona charts (HTML5 pie charts) from hierarchical data generated from several bioinformatics tools or manually as text and XML files", "installation method": "source", "previous versions": [], "version": "2.4"}, "LAP": {"categories": ["statistics", "validation"], "commands": ["mprobability", "mean", "sample", "stitch"], "dependencies": [], "description": "(Log Average Probability) Provides a de novo probabilistic measure of assembly quality. It allows for comparisons between multiple assemblies generated from the same set of reads.", "installation method": "binary", "previous versions": [], "version": "1.1"}, "LAST": {"categories": ["alignment"], "commands": ["lastdb", "lastal"], "dependencies": ["gcc"], "description": "Large-scale alignment program. LAST is an aligner like BLAST but is better at finding weak alignments and alignments in repeat-rich sequences", "installation method": "source", "previous versions": [], "version": "584"}, "LotuS": {"categories": ["pipeline"], "commands": ["lotus"], "dependencies": ["usearch(>=7)"], "description": "(Less OTU Scripts) Pipeline for calculating denoised and chimera-checked OTUs from multiplexed, next generation tag-sequencing data", "installation method": "source", "previous versions": [], "version": "1.151"}, "MEGAHIT": {"categories": ["assembly"], "commands": ["megahit", "megahit_asm_score", "megahit_sdbg_build", "megahit_toolkit"], "dependencies": ["gcc"], "description": "A Next Generation Sequencing de Bruijn de novo assembler. Can use GPU and is very memory efficient.", "installation method": "source", "previous versions": ["1.0.1(20160324)"], "version": "1.0.4"}, "MOCAT": {"categories": ["pipeline"], "commands": ["MOCAT.pl", "runMOCAT.sh"], "dependencies": ["Perl(>= 5.8.8)"], "description": "Pipeline for processing Illumina metagenomic data", "installation method": "source", "previous versions": [], "version": "1.3"}, "MUMmer": {"categories": ["alignment"], "commands": ["annotate", "combineMUMs", "delta-filter", "dnadiff", "exact-tandems", "gaps", "mapview", "mummerplot", "nucmer", "nucmer2xfig", "promer", "repeat-match", "run-mummer1", "run-mummer3", "show-aligns", "show-coords", "show-diffs", "show-snps", "show-tiling"], "dependencies": [], "description": "Ultra-fast whole genome aligner. Works for drafts or complete assemblies from cultures or metagenomics.", "installation method": "make", "previous versions": [], "version": "3.23"}, "MUSCLE": {"categories": ["alignment"], "commands": ["muscle"], "dependencies": ["gcc"], "description": "For creating multiple alignments of protein sequences", "installation method": "source", "previous versions": [], "version": "3.8.31"}, "MatGAT": {"categories": ["alignment"], "commands": ["MatGat"], "dependencies": ["JAVA(>=1.3.1)"], "description": "(Matrix Global Alignment Tool) Calculates the similarity and identity between every pair of DNA or protein sequences in a given data set without needing pre-alignment of data", "installation method": "source", "previous versions": [], "version": "2.03"}, "MaxBin": {"categories": ["binning"], "commands": ["MaxBin"], "dependencies": ["g++", "Perl5", "CPAN", "LWP::Simple", "FindBin", "Bowtie2(>=2.2)", "FragGeneScan(>=1.18)", "Hmmer3(>=3.0.0)", "IDBA-UD(>=1.1.1)"], "description": "For binning assembled metagenomics sequences based on an Expectation-Maximization algorithm. Combines tetranucleotide frequencies and contig/scaffold coverages to organize metagenomic sequences into individual bins, which are predicted from initial identification of marker genes in assembled sequences", "installation method": "source", "previous versions": [], "version": "2.2"}, "Mesquite": {"categories": ["binning"], "commands": ["mesquite"], "dependencies": ["JAVA(>=1.4)"], "description": "Designed to help organize and analyze comparative data about organisms, with an emphasis on phylogenetic analysis", "installation method": "source", "previous versions": [], "version": "3.0"}, "MetaBAT": {"categories": ["binning"], "commands": ["metabat", "runMetaBat.sh", "aggregateBinDepths.pl", "aggregateContigOverlapsByBin.pl", "contigOverlaps", "jgi_summarize_bam_contig_depths"], "dependencies": ["boost(>=1.55.0)", "python(>=2.7)", "scons(>=2.1.0)", "g++(>=4.6)", "zlib(>=1.2.4)", "samtools(=1.2)"], "description": "(Metagenome Binning with Abundance and Tetra-nucleotide frequencies) Fully automated tool for grouping large genomic fragments assembled from shotgun metagenomic sequences. MetaBAT integrates empirical probabilistic distances of genome abundance and tetranucleotide frequency for accurate binning", "installation method": "source", "previous versions": [], "version": "0.26.3"}, "MetaGeneMark": {"categories": ["annotation"], "commands": ["gmhmmp"], "dependencies": [], "description": "Finds Genes/ORFs in DNA sequences as short as 400 nucleotides using Hidden Markov Models.", "installation method": "source", "previous versions": [], "version": "3.26"}, "MetaPhlAn": {"categories": ["annotation"], "commands": ["metaphlan2.py"], "dependencies": ["Python(>=2.7;>=3.0)", "numpy", "tempfile", "argparse"], "description": "(Metagenomic Phylogenetic Analysis) A microbial community profiler. Attemps to determine number of cells of each taxa in a sample.", "installation method": "source", "previous versions": [], "version": "2.0"}, "MetaVelvet": {"categories": ["assembly"], "commands": ["velveth", "velvetg", "meta-velvetg"], "dependencies": ["zlib", "g++"], "description": "Like velvet, but modified for the assembly of metagenomes", "installation method": "source", "previous versions": [], "version": "1.2.02"}, "MetaWatt": {"categories": ["pipeline"], "commands": ["metawatt"], "dependencies": ["blastx", "hmmer", "aragorn", "JVM"], "description": "A GUI binner that constructs bins using tetranucleotide frequency, differential coverage, and read mapping data. Performs quality control using blastx, HMMER, and ARAGORN", "installation method": "source", "previous versions": [], "version": ""}, "MinCED": {"categories": ["annotation"], "commands": ["minced"], "dependencies": ["Java"], "description": "(Mining Clustered Regulary Interspaced Short Palindromic Repeats (CRISPRs) in Environmental Datasets) Finds CRISPRs in full genomes or environmental datasets, in which sequence size can be between 100 to 800 bp", "installation method": "source", "previous versions": ["0.1.4(to 2015-01-15)"], "version": "0.1.6"}, "Moira": {"categories": ["qc", "merging"], "commands": ["moira.py"], "dependencies": ["gcc", "python(>=2.7)"], "description": "For quality-based filtering of sequencing reads. Calculates error-probability distributions from quality scores to determine the number of errors expected in the sequence", "installation method": "pip", "previous versions": ["1.1.0(20160401)"], "version": "1.2.0"}, "Mothur": {"categories": ["analysis"], "commands": ["align.check", "align.seqs", "amova", "anosim", "bin.seqs", "catchall", "chimera.bellerophon", "chimera.ccode", "chimera.check", "chimera.perseus", "chimera.pintail", "chimera.slayer", "chimera.uchime", "chop.seqs", "classify.otu", "classify.rf", "classify.seqs", "classify.svm", "classify.tree", "clear.memory", "clearcut", "cluster", "cluster.classic", "cluster.fragments", "cluster.split", "collect.shared", "collect.single", "consensus.seqs", "cooccurrence", "corr.axes", "count.groups", "count.seqs", "create.database", "degap.seqs", "deunique.seqs", "deunique.tree", "dist.seqs", "dist.shared", "fastq.info", "filter.seqs", "filter.shared", "get.commandinfo", "get.communitytype", "get.coremicrobiome", "get.current", "get.dists", "get.group", "get.groups", "get.label", "get.lineage", "get.mimarkspackage", "get.otulabels", "get.otulist", "get.oturep", "get.otus", "get.rabund", "get.relabund", "get.sabund", "get.seqs", "get.sharedseqs", "hcluster", "heatmap.bin", "heatmap.sim", "help", "homova", "indicator", "kruskal.wallis", "lefse", "libshuff", "list.otulabels", "list.seqs", "load.logfile", "make.biom", "make.contigs", "make.fastq", "make.file", "make.group", "make.lefse", "make.lookup", "make.shared", "make.sra", "make.table", "mantel", "merge.files", "merge.groups", "merge.sfffiles", "merge.taxsummary", "metastats", "mgcluster", "mimarks.attributes", "nmds", "normalize.shared", "otu.association", "otu.hierarchy", "pairwise.seqs", "parse.list", "parsimony", "pca", "pcoa", "pcr.seqs", "phylo.diversity", "phylotype", "pipeline.pds", "pre.cluster", "primer.design", "quit", "rarefaction.shared", "rarefaction.single", "remove.dists", "remove.groups", "remove.lineage", "remove.otulabels", "remove.otus", "remove.rare", "remove.seqs", "rename.seqs", "reverse.seqs", "screen.seqs", "sens.spec", "seq.error", "set.current", "set.dir", "set.logfile", "set.seed", "sff.multiple", "sffinfo", "shhh.flows", "shhh.seqs", "sort.seqs", "sparcc", "split.abund", "split.groups", "sub.sample", "summary.qual", "summary.seqs", "summary.shared", "summary.single", "summary.tax", "system", "tree.shared", "trim.flows", "trim.seqs", "unifrac.unweighted", "unifrac.weighted", "unique.seqs", "venn"], "dependencies": ["gcc", "g++", "ncurses", "readline", "boost", "gfortran"], "description": "Suite of tools for analyzing sequencing data from environmental samples", "installation method": "source", "previous versions": ["1.34.2(2016-01-26)"], "version": "1.36.1"}, "Oligotyping": {"commands": [], "dependencies": ["Python(>=2.7)", "Django(Python lib)", "Matplotlib(Python lib)", "Scipy(Python lib)", "BioPython(Python lib)", "R", "vegan(R lib)", "ggplot2(R lib)", "gplots(R lib)", "gtools(R lib)", "reshape(R lib)", "optparse(R lib)", "pheatmap(R lib)", "RColorBrewer(R lib)", "compute.es(R lib)", "BLAST+(>=2.2)"], "description": "For identifying subtle variation among 16S Ribosomal RNA gene sequences to reveal diversity at an extremely precise level within closely-related organisms", "installation method": "python pip", "previous versions": [], "version": "1.7"}, "Omega": {"categories": ["assembly"], "commands": ["omega"], "dependencies": ["gcc"], "description": "An overlap-graph based, de novo metagenome assembler. Omega works best with long Illumina reads and datasets with deep coverage", "installation method": "source", "previous versions": [], "version": "1.0.2"}, "PANDAseq": {"categories": ["merging"], "commands": ["pandaseq"], "dependencies": ["zlib", "bzip2", "libtool"], "description": "Assembles overlapping paired-end Ilumina reads into sequences", "installation method": "git", "previous versions": ["2.6(to 2015-01-12)"], "version": "2.8"}, "PEAR": {"categories": ["merging"], "commands": ["pear"], "dependencies": ["libtool", "autotool", "zlib"], "description": "(Paired-End reAd mergeR) Fast and accurate merger for Ilumina paired-ends read. It can handle large datasets and is capable of dealing with reads that are longer than the template.", "installation method": "source", "previous versions": [], "version": "0.9.6"}, "PRINSEQ": {"categories": ["qc"], "commands": ["prinseq", "prinseq-graphs"], "dependencies": ["Perl"], "description": "(PReprocessing & INformation of SEQuence data) Tool for filtering, reformatting, and trimming genomic and metagenomics sequencing data", "installation method": "source", "previous versions": [], "version": "0.20.4"}, "PhylOTU": {"categories": ["annotation"], "commands": ["otu_handler.pl"], "dependencies": ["BioPerl", "IPC::System::Simple", "Bio::Phylo::IO", "File::Basename", "File::Path", "File::Copy", "APE(R library)", "Boost(C++ Library)", "Infernal", "FastTree", "Legacy BLAST", "Mothur"], "description": "Identifies microbial OTUs from metagenomic sequence data", "installation method": "source", "previous versions": [], "version": ""}, "PhyloSeq": {"categories": ["visualization", "statistics", "analysis"], "commands": [], "dependencies": ["R(>=3.1.0)"], "description": "R package that provides a set of classes to facilitate the import, storage, analysis, and graphical display of microbiome census data", "installation method": "R", "previous versions": [], "version": "1.14.0"}, "PhyloSift": {"categories": ["annotation"], "commands": ["phylosift"], "dependencies": ["BioPerl", "Bio::Phylo", "LWP::Simple", "App::Cmd", "JSON(perl module)", "pplacer", "guppy", "FastTree(2.1.3)", "HMMER3", "Infernal", "pda", "LAST"], "description": "Tools for conducting phylogenetic analysis of genomes and metagenomes", "installation method": "source", "previous versions": [], "version": "1.0.1"}, "Picard": {"categories": ["qc"], "commands": ["PicardCommandLine"], "dependencies": ["Java(>=1.6)"], "description": "Tools for manipulating high-throughput sequencing data and formats", "installation method": "source", "previous versions": ["1.107(2015-01-15)", "1.128(2016-01-31)"], "version": "2.0.1"}, "Prodigal": {"categories": ["annotation"], "commands": [], "dependencies": ["gcc"], "description": "A fast and accurate protein encoding gene predictor for prokaryotic genomes. Uses dynamic programming to reduce false-positive gene calls in organisms with high GC content", "installation method": "source", "previous versions": [], "version": "2.6.2"}, "Prokka": {"categories": ["annotation"], "commands": ["prokka"], "dependencies": ["BioPerl(>=1.6.2)", "tbl2asn(>=23.0)", "SignalIP(>=3.0)", "Infernal(>=1.1)", "HMMER3(>=3.1)", "BLAST+(>=2.2)", "Barrnap(>=0.1.6)", "Minced(>=0.1.6)", "Aragorn(>=1.2)", "Prodigal(2.0-2.6)"], "description": "(Prokaryotic annotation) For rapid prokaryotic genome annotations", "installation method": "source", "previous versions": ["1.10", "1.7(2015-01-15)", "1.11(2016-01-31)"], "version": "1.12"}, "QIIME": {"categories": ["analysis"], "commands": ["See http://qiime.org for commands"], "dependencies": ["Python(2.7.3)", "Numpy(1.5.1-1.7.1)", "MatPlotLib(1.1.0-1.3.1)", "uclust(1.2.22q)", "FastTree(2.1.3)"], "description": "(Quantitative Insights into Microbial Ecology) Suite of tools for the comparison and analysis of microbial communities", "installation method": "pip", "previous versions": ["1.8.0(2016-01-26)"], "version": "1.9.1"}, "QUAST": {"categories": ["statistics"], "commands": ["quast.py", "metaquast.py"], "dependencies": ["Python(>=2.5)", "Perl(>=5.6.0)"], "description": "(Quality Assessment Tool for Genome Assemblies) Tool for evaluating genome assemblies through the computation of various metrics", "installation method": "source", "previous versions": ["2.3(2015-12-28)"], "version": "3.2"}, "RAxML": {"categories": ["statistics"], "commands": ["raxml", "raxml-mpi", "raxml-hybrid"], "dependencies": ["gcc", "openmpi", "pthreads"], "description": "(Randomized Axelerated Maximum Liklihood) Performs maximum-liklihood based inference on large phylogenetic trees", "installation method": "source", "previous versions": ["8.0.20(2016-02-01)"], "version": "8.2.0"}, "REAPR": {"categories": ["statistics"], "commands": ["reapr"], "dependencies": ["R", "Perl", "SAMtools", "BamTools", "SNP-o-matic"], "description": "Tool for evaluating the accuracy of an assembly using mapped paired-end reads", "installation method": "source", "previous versions": [], "version": "1.0.18"}, "RGI": {"categories": ["annotation"], "commands": ["rgi", "rgi_clean", "rgi_load", "rgi_jasonformat", "rgi_jasontab"], "dependencies": ["Python(>=2.7)", "Ruby"], "description": "(Resistance Gene Identifier) For detecting antimicrobial resistance gene and mutation sequences in genome or protein sequences. It catalogs resistome predictions by both drug class and resistance mechanism using the Antibiotic Resistance Ontology (ARO)", "installation method": "pip", "previous versions": [], "version": "3.1.1"}, "Ray": {"categories": ["assembly"], "commands": ["Ray", "Ray Meta"], "dependencies": ["gcc"], "description": "Uses distributed computing for de novo assembly of very large next-generation sequencing datasets. Can assemble single genomes, metagenomes, and metatranscriptomes, and contains functionality for taxonomic and gene ontology profiling", "installation method": "source", "previous versions": [], "version": "2.3.1"}, "SAMtools": {"categories": ["formatting"], "commands": ["samtools"], "dependencies": ["ncurses", "zlib"], "description": "(Sequence Alignment/Map tools) Tools for manipulating alignments in the SAM, BAM, and CRAM formats", "installation method": "source", "previous versions": ["0.1.19(2015-01-13)", "1.1(2016-28-01)"], "version": "1.3"}, "SDM": {"categories": ["qc"], "commands": ["sdm"], "dependencies": ["usearch(>=7)"], "description": "(Simple Demultiplexer) General purpose tool used for the demultiplexing, quality filtering, and format conversion of sequencing data", "installation method": "source", "previous versions": [], "version": "0.98"}, "SHRiMP": {"categories": ["alignment"], "commands": ["None linked on server"], "dependencies": ["gcc"], "description": "(SHort Read Mapping Package) Aligns Next-Generation Sequencing reads to a reference genome using the q-gram filtering technique and Smith-Waterman string matching algorithm", "installation method": "source", "previous versions": [], "version": "2.2.3"}, "SWARM": {"categories": ["clustering"], "commands": ["swarm", "swarm_breaker"], "dependencies": ["unix"], "description": "single-linkage clustering method for amplicon-based studies that uses sequence abundance to delineate OTUs", "installation method": "git", "previous versions": ["1.2.6(to 2015-01-13)"], "version": "1.2.20"}, "Scythe": {"categories": ["qc"], "commands": ["scythe"], "dependencies": ["gcc", "zlib"], "description": "Uses Bayesian statistics and quality score information to determine if a read contains a contaminant substring", "installation method": "source", "previous versions": [], "version": "0.944"}, "ShortBRED": {"categories": ["annotation"], "commands": ["shortbred_identify.py", "shortbred_quantify.py"], "dependencies": ["Python(2.7.9+)", "Biopython(1.65+)", "ncbi-blast(2.28+)", "usearch(6.0.307+)", "MUSCLE(3.8.1+)", "CD-HIT(4.6+)"], "description": "(Short, Better, Representative Extract Dataset) A pipeline for identifying unique markers in protein families and searching for the identified markers in metagenomes", "installation method": "git", "previous versions": [], "version": "0.9.1"}, "TagDust": {"categories": ["qc"], "commands": ["tagdust"], "dependencies": ["make", "gcc"], "description": "Identifies and eliminates artifactual sequences in NGS datasets", "installation method": "source", "previous versions": [], "version": "1.13"}, "Trimmomatic": {"categories": ["qc"], "commands": ["trimmomatic"], "dependencies": ["JVM"], "description": "A flexible trimmer for Illumina paired-end and single-end data", "installation method": "", "previous versions": [], "version": "0.33"}, "USEARCH": {"categories": ["qc", "pipeline", "merging", "clustering", "statistics"], "commands": ["moira.py"], "dependencies": [], "description": "Tool for processing high-throughput sequencing data", "installation method": "binary", "previous versions": ["8.0.1517(2016-05-05)"], "version": "8.1.1861"}, "VSEARCH": {"categories": ["analysis"], "commands": ["vsearch"], "dependencies": ["gcc", "pthreads", "zlib", "bzip2"], "description": "Open source, 64-bit replacement for USEARCH with compression support", "installation method": "source", "previous versions": [], "version": "1.9.10"}, "Velvet": {"categories": ["assembly"], "commands": ["velvetg", "velveth"], "dependencies": ["g++", "zlib"], "description": "Popular de Bruijn graph based, de novo genome assembler for short HTS reads", "installation method": "source", "previous versions": [], "version": "1.2.10"}, "abawaca": {"categories": ["binning"], "commands": ["abawaca"], "dependencies": [], "description": "PCA-based binner of assembled reads. Takes lrn files as input", "installation method": "Make", "previous versions": [], "version": "1.00"}, "betapart": {"categories": ["library", "statistics", "analysis"], "commands": [], "dependencies": ["R(>=2.10)"], "description": "R package for partitioning beta diversity into turnover and nestedness components", "installation method": "R", "previous versions": [], "version": "1.3"}, "edgeR": {"categories": ["library", "statistics", "analysis"], "commands": [], "dependencies": ["R(>=2.15.0)"], "description": "R package for differential expression analysis of digital gene expression data. Implements a range of statistical methodology based on the negative binomial distributions, including empirical Bayes estimation, exact tests, generalized linear models and quasi-likelihood tests", "installation method": "Bioconductor", "previous versions": ["3.6.8(2016-01-28)"], "version": "3.12.0"}, "geo-omics": {"categories": ["analysis"], "commands": ["esomWrapper.pl", "getClassFasta.pl", "esomTrain.pl"], "dependencies": ["Perl(>=5.10)", "Python(>=2.7)", "R(>=3)"], "description": "A library of Python and Perl programs for various tasks. Most scripts perform some function on data after it's processed.", "installation method": "source", "previous versions": [], "version": ""}, "indicspecies": {"categories": ["library", "statistics", "analysis"], "commands": [], "dependencies": ["R"], "description": "R package with functions to assess the strength and statistical significance of the relationship between species occurrence/abundance and groups of sites. Also includes functions to measure species niche breadth using resource categories", "installation method": "R", "previous versions": [], "version": "1.7.5"}, "labdsv": {"categories": ["library", "statistics", "analysis"], "commands": [], "dependencies": ["R(>=2.10)", "mgcv", "MASS", "cluster"], "description": "R package with a variety of ordination and community analyses useful in analysis of data sets in community ecology. Includes many of the common ordination methods, with graphical routines to facilitate their interpretation, as well as several novel analyses", "installation method": "R", "previous versions": [], "version": "1.8.0"}, "mugsy": {"categories": ["alignment"], "commands": ["mugsy"], "dependencies": [], "description": "Multiple whole genome aligner that aligns draft genomes to each other", "installation method": "Source Downloaded, Executables Linked", "previous versions": [], "version": "1r2.3"}, "pplacer": {"categories": ["annotation"], "commands": ["guppy", "pplacer", "rppr"], "dependencies": [], "description": "Places query sequences on a phylogenetic tree to quickly determine their phylogeny. Visualization options available with guppy", "installation method": "source", "previous versions": [], "version": ""}, "sickle": {"categories": ["qc"], "commands": ["sickle"], "dependencies": ["gcc"], "description": "A windowed adaptive trimmer for FASTQ files", "installation method": "source", "previous versions": [], "version": "1.33"}, "snpEff": {"categories": ["annotation"], "commands": ["snpEff.jar", "SnpSift.jar"], "dependencies": ["JVM(Java 1.7)"], "description": "Annotates and predicts the effects of genetic variants such as amino acid changes", "installation method": "source", "previous versions": [], "version": "4.1"}, "vegan": {"categories": ["library", "statistics", "analysis"], "commands": [], "dependencies": ["R(>=3.0.0)", "lattice", "permute(>=0.8.0)"], "description": "R package providing tools for descriptive community ecology. It has most basic functions of diversity analysis, community ordination and dissimilarity analysis", "installation method": "R", "previous versions": [], "version": "2.3.4"}}